{"ast":null,"code":"\"use client\";\n\nimport { useFocusRing as c } from \"@react-aria/focus\";\nimport { useHover as A } from \"@react-aria/interactions\";\nimport { Fragment as D, useMemo as f } from \"react\";\nimport { useActivePress as v } from '../../hooks/use-active-press.js';\nimport { forwardRefWithAs as I, mergeProps as y, render as P } from '../../utils/render.js';\nlet E = D;\nfunction _(o, n) {\n  let {\n      ...p\n    } = o,\n    e = !1,\n    {\n      isFocusVisible: t,\n      focusProps: s\n    } = c(),\n    {\n      isHovered: r,\n      hoverProps: i\n    } = A({\n      isDisabled: e\n    }),\n    {\n      pressed: a,\n      pressProps: T\n    } = v({\n      disabled: e\n    }),\n    l = y({\n      ref: n\n    }, s, i, T),\n    m = f(() => ({\n      hover: r,\n      focus: t,\n      active: a\n    }), [r, t, a]);\n  return P({\n    ourProps: l,\n    theirProps: p,\n    slot: m,\n    defaultTag: E,\n    name: \"DataInteractive\"\n  });\n}\nlet C = I(_);\nexport { C as DataInteractive };","map":null,"metadata":{},"sourceType":"module"}