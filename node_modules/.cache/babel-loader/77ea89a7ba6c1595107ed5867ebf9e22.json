{"ast":null,"code":"import { useRef as a, useState as m } from \"react\";\nimport { getOwnerDocument as d } from '../utils/owner.js';\nimport { useDisposables as g } from './use-disposables.js';\nimport { useEvent as u } from './use-event.js';\nfunction E(e) {\n  let t = e.width / 2,\n    n = e.height / 2;\n  return {\n    top: e.clientY - n,\n    right: e.clientX + t,\n    bottom: e.clientY + n,\n    left: e.clientX - t\n  };\n}\nfunction P(e, t) {\n  return !(!e || !t || e.right < t.left || e.left > t.right || e.bottom < t.top || e.top > t.bottom);\n}\nfunction w({\n  disabled: e = !1\n} = {}) {\n  let t = a(null),\n    [n, l] = m(!1),\n    r = g(),\n    o = u(() => {\n      t.current = null, l(!1), r.dispose();\n    }),\n    f = u(s => {\n      if (r.dispose(), t.current === null) {\n        t.current = s.currentTarget, l(!0);\n        {\n          let i = d(s.currentTarget);\n          r.addEventListener(i, \"pointerup\", o, !1), r.addEventListener(i, \"pointermove\", c => {\n            if (t.current) {\n              let p = E(c);\n              l(P(p, t.current.getBoundingClientRect()));\n            }\n          }, !1), r.addEventListener(i, \"pointercancel\", o, !1);\n        }\n      }\n    });\n  return {\n    pressed: n,\n    pressProps: e ? {} : {\n      onPointerDown: f,\n      onPointerUp: o,\n      onClick: o\n    }\n  };\n}\nexport { w as useActivePress };","map":null,"metadata":{},"sourceType":"module"}