{"ast":null,"code":"import { focusSafely as $6a99195332edec8b$export$80f3e147d781571c } from \"./focusSafely.module.js\";\nimport { useSyncRef as $h8xso$useSyncRef, useObjectRef as $h8xso$useObjectRef, mergeProps as $h8xso$mergeProps } from \"@react-aria/utils\";\nimport $h8xso$react, { useContext as $h8xso$useContext, useRef as $h8xso$useRef, useEffect as $h8xso$useEffect } from \"react\";\nimport { useFocus as $h8xso$useFocus, useKeyboard as $h8xso$useKeyboard } from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $e6afbd83fe6ebbd2$var$FocusableContext = /*#__PURE__*/(0, $h8xso$react).createContext(null);\nfunction $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {\n  let context = (0, $h8xso$useContext)($e6afbd83fe6ebbd2$var$FocusableContext) || {};\n  (0, $h8xso$useSyncRef)(context, ref);\n  // eslint-disable-next-line\n  let {\n    ref: _,\n    ...otherProps\n  } = context;\n  return otherProps;\n}\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {\n  let {\n    children: children,\n    ...otherProps\n  } = props;\n  let objRef = (0, $h8xso$useObjectRef)(ref);\n  let context = {\n    ...otherProps,\n    ref: objRef\n  };\n  return /*#__PURE__*/(0, $h8xso$react).createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {\n    value: context\n  }, children);\n}\nlet $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = /*#__PURE__*/(0, $h8xso$react).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);\nfunction $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {\n  let {\n    focusProps: focusProps\n  } = (0, $h8xso$useFocus)(props);\n  let {\n    keyboardProps: keyboardProps\n  } = (0, $h8xso$useKeyboard)(props);\n  let interactions = (0, $h8xso$mergeProps)(focusProps, keyboardProps);\n  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = (0, $h8xso$useRef)(props.autoFocus);\n  (0, $h8xso$useEffect)(() => {\n    if (autoFocusRef.current && domRef.current) (0, $6a99195332edec8b$export$80f3e147d781571c)(domRef.current);\n    autoFocusRef.current = false;\n  }, [domRef]);\n  return {\n    focusableProps: (0, $h8xso$mergeProps)({\n      ...interactions,\n      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n    }, interactionProps)\n  };\n}\nexport { $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 as FocusableProvider, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c as useFocusable };","map":null,"metadata":{},"sourceType":"module"}