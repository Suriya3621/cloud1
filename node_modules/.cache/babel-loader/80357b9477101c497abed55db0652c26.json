{"ast":null,"code":"import f, { createContext as M, useContext as d, useState as H } from \"react\";\nimport { Hidden as E, HiddenFeatures as T } from '../internal/hidden.js';\nimport { getOwnerDocument as L } from '../utils/owner.js';\nimport { useEvent as s } from './use-event.js';\nimport { useOwnerDocument as h } from './use-owner.js';\nfunction R({\n  defaultContainers: l = [],\n  portals: n,\n  mainTreeNode: o\n} = {}) {\n  let r = h(o),\n    u = s(() => {\n      var i, c;\n      let t = [];\n      for (let e of l) e !== null && (e instanceof HTMLElement ? t.push(e) : \"current\" in e && e.current instanceof HTMLElement && t.push(e.current));\n      if (n != null && n.current) for (let e of n.current) t.push(e);\n      for (let e of (i = r == null ? void 0 : r.querySelectorAll(\"html > *, body > *\")) != null ? i : []) e !== document.body && e !== document.head && e instanceof HTMLElement && e.id !== \"headlessui-portal-root\" && (o && (e.contains(o) || e.contains((c = o == null ? void 0 : o.getRootNode()) == null ? void 0 : c.host)) || t.some(m => e.contains(m)) || t.push(e));\n      return t;\n    });\n  return {\n    resolveContainers: u,\n    contains: s(t => u().some(i => i.contains(t)))\n  };\n}\nlet a = M(null);\nfunction O({\n  children: l,\n  node: n\n}) {\n  let [o, r] = H(null),\n    u = b(n != null ? n : o);\n  return f.createElement(a.Provider, {\n    value: u\n  }, l, u === null && f.createElement(E, {\n    features: T.Hidden,\n    ref: t => {\n      var i, c;\n      if (t) {\n        for (let e of (c = (i = L(t)) == null ? void 0 : i.querySelectorAll(\"html > *, body > *\")) != null ? c : []) if (e !== document.body && e !== document.head && e instanceof HTMLElement && e != null && e.contains(t)) {\n          r(e);\n          break;\n        }\n      }\n    }\n  }));\n}\nfunction b(l = null) {\n  var n;\n  return (n = d(a)) != null ? n : l;\n}\nexport { O as MainTreeProvider, b as useMainTreeNode, R as useRootContainers };","map":null,"metadata":{},"sourceType":"module"}