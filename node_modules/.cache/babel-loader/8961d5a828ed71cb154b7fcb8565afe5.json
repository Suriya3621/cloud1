{"ast":null,"code":"\"use client\";\n\nimport m, { createContext as T, useContext as u, useMemo as c, useState as P } from \"react\";\nimport { useEvent as g } from '../../hooks/use-event.js';\nimport { useId as x } from '../../hooks/use-id.js';\nimport { useIsoMorphicEffect as y } from '../../hooks/use-iso-morphic-effect.js';\nimport { useSyncRefs as E } from '../../hooks/use-sync-refs.js';\nimport { useDisabled as v } from '../../internal/disabled.js';\nimport { forwardRefWithAs as R, render as I } from '../../utils/render.js';\nlet a = T(null);\na.displayName = \"DescriptionContext\";\nfunction f() {\n  let r = u(a);\n  if (r === null) {\n    let e = new Error(\"You used a <Description /> component, but it is not inside a relevant parent.\");\n    throw Error.captureStackTrace && Error.captureStackTrace(e, f), e;\n  }\n  return r;\n}\nfunction G() {\n  var r, e;\n  return (e = (r = u(a)) == null ? void 0 : r.value) != null ? e : void 0;\n}\nfunction U() {\n  let [r, e] = P([]);\n  return [r.length > 0 ? r.join(\" \") : void 0, c(() => function (t) {\n    let i = g(n => (e(s => [...s, n]), () => e(s => {\n        let o = s.slice(),\n          p = o.indexOf(n);\n        return p !== -1 && o.splice(p, 1), o;\n      }))),\n      l = c(() => ({\n        register: i,\n        slot: t.slot,\n        name: t.name,\n        props: t.props,\n        value: t.value\n      }), [i, t.slot, t.name, t.props, t.value]);\n    return m.createElement(a.Provider, {\n      value: l\n    }, t.children);\n  }, [e])];\n}\nlet S = \"p\";\nfunction C(r, e) {\n  let d = x(),\n    t = v(),\n    {\n      id: i = `headlessui-description-${d}`,\n      ...l\n    } = r,\n    n = f(),\n    s = E(e);\n  y(() => n.register(i), [i, n.register]);\n  let o = t || !1,\n    p = c(() => ({\n      ...n.slot,\n      disabled: o\n    }), [n.slot, o]),\n    D = {\n      ref: s,\n      ...n.props,\n      id: i\n    };\n  return I({\n    ourProps: D,\n    theirProps: l,\n    slot: p,\n    defaultTag: S,\n    name: n.name || \"Description\"\n  });\n}\nlet _ = R(C),\n  w = Object.assign(_, {});\nexport { w as Description, G as useDescribedBy, U as useDescriptions };","map":null,"metadata":{},"sourceType":"module"}