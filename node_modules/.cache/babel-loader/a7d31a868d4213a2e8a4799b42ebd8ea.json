{"ast":null,"code":"import { disposables as N } from './disposables.js';\nimport { match as L } from './match.js';\nimport { getOwnerDocument as E } from './owner.js';\nlet f = [\"[contentEditable=true]\", \"[tabindex]\", \"a[href]\", \"area[href]\", \"button:not([disabled])\", \"iframe\", \"input:not([disabled])\", \"select:not([disabled])\", \"textarea:not([disabled])\"].map(e => `${e}:not([tabindex='-1'])`).join(\",\"),\n  p = [\"[data-autofocus]\"].map(e => `${e}:not([tabindex='-1'])`).join(\",\");\nvar F = (n => (n[n.First = 1] = \"First\", n[n.Previous = 2] = \"Previous\", n[n.Next = 4] = \"Next\", n[n.Last = 8] = \"Last\", n[n.WrapAround = 16] = \"WrapAround\", n[n.NoScroll = 32] = \"NoScroll\", n[n.AutoFocus = 64] = \"AutoFocus\", n))(F || {}),\n  T = (o => (o[o.Error = 0] = \"Error\", o[o.Overflow = 1] = \"Overflow\", o[o.Success = 2] = \"Success\", o[o.Underflow = 3] = \"Underflow\", o))(T || {}),\n  y = (t => (t[t.Previous = -1] = \"Previous\", t[t.Next = 1] = \"Next\", t))(y || {});\nfunction b(e = document.body) {\n  return e == null ? [] : Array.from(e.querySelectorAll(f)).sort((r, t) => Math.sign((r.tabIndex || Number.MAX_SAFE_INTEGER) - (t.tabIndex || Number.MAX_SAFE_INTEGER)));\n}\nfunction S(e = document.body) {\n  return e == null ? [] : Array.from(e.querySelectorAll(p)).sort((r, t) => Math.sign((r.tabIndex || Number.MAX_SAFE_INTEGER) - (t.tabIndex || Number.MAX_SAFE_INTEGER)));\n}\nvar h = (t => (t[t.Strict = 0] = \"Strict\", t[t.Loose = 1] = \"Loose\", t))(h || {});\nfunction A(e, r = 0) {\n  var t;\n  return e === ((t = E(e)) == null ? void 0 : t.body) ? !1 : L(r, {\n    [0]() {\n      return e.matches(f);\n    },\n    [1]() {\n      let u = e;\n      for (; u !== null;) {\n        if (u.matches(f)) return !0;\n        u = u.parentElement;\n      }\n      return !1;\n    }\n  });\n}\nfunction G(e) {\n  let r = E(e);\n  N().nextFrame(() => {\n    r && !A(r.activeElement, 0) && I(e);\n  });\n}\nvar H = (t => (t[t.Keyboard = 0] = \"Keyboard\", t[t.Mouse = 1] = \"Mouse\", t))(H || {});\ntypeof window != \"undefined\" && typeof document != \"undefined\" && (document.addEventListener(\"keydown\", e => {\n  e.metaKey || e.altKey || e.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = \"\");\n}, !0), document.addEventListener(\"click\", e => {\n  e.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = \"\");\n}, !0));\nfunction I(e) {\n  e == null || e.focus({\n    preventScroll: !0\n  });\n}\nlet w = [\"textarea\", \"input\"].join(\",\");\nfunction O(e) {\n  var r, t;\n  return (t = (r = e == null ? void 0 : e.matches) == null ? void 0 : r.call(e, w)) != null ? t : !1;\n}\nfunction _(e, r = t => t) {\n  return e.slice().sort((t, u) => {\n    let o = r(t),\n      c = r(u);\n    if (o === null || c === null) return 0;\n    let l = o.compareDocumentPosition(c);\n    return l & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : l & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;\n  });\n}\nfunction j(e, r) {\n  return P(b(), r, {\n    relativeTo: e\n  });\n}\nfunction P(e, r, {\n  sorted: t = !0,\n  relativeTo: u = null,\n  skipElements: o = []\n} = {}) {\n  let c = Array.isArray(e) ? e.length > 0 ? e[0].ownerDocument : document : e.ownerDocument,\n    l = Array.isArray(e) ? t ? _(e) : e : r & 64 ? S(e) : b(e);\n  o.length > 0 && l.length > 1 && (l = l.filter(s => !o.some(a => a != null && \"current\" in a ? (a == null ? void 0 : a.current) === s : a === s))), u = u != null ? u : c.activeElement;\n  let n = (() => {\n      if (r & 5) return 1;\n      if (r & 10) return -1;\n      throw new Error(\"Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last\");\n    })(),\n    x = (() => {\n      if (r & 1) return 0;\n      if (r & 2) return Math.max(0, l.indexOf(u)) - 1;\n      if (r & 4) return Math.max(0, l.indexOf(u)) + 1;\n      if (r & 8) return l.length - 1;\n      throw new Error(\"Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last\");\n    })(),\n    M = r & 32 ? {\n      preventScroll: !0\n    } : {},\n    m = 0,\n    d = l.length,\n    i;\n  do {\n    if (m >= d || m + d <= 0) return 0;\n    let s = x + m;\n    if (r & 16) s = (s + d) % d;else {\n      if (s < 0) return 3;\n      if (s >= d) return 1;\n    }\n    i = l[s], i == null || i.focus(M), m += n;\n  } while (i !== c.activeElement);\n  return r & 6 && O(i) && i.select(), 2;\n}\nexport { F as Focus, T as FocusResult, h as FocusableMode, I as focusElement, j as focusFrom, P as focusIn, f as focusableSelector, S as getAutoFocusableElements, b as getFocusableElements, A as isFocusableElement, G as restoreFocusIfNecessary, _ as sortByDomNode };","map":null,"metadata":{},"sourceType":"module"}