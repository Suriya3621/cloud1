{"ast":null,"code":"\"use client\";\n\nimport { useFocusRing as P } from \"@react-aria/focus\";\nimport { useHover as c } from \"@react-aria/interactions\";\nimport { useMemo as g } from \"react\";\nimport { useId as v } from '../../hooks/use-id.js';\nimport { useDisabled as A } from '../../internal/disabled.js';\nimport { useProvidedId as _ } from '../../internal/id.js';\nimport { forwardRefWithAs as D, mergeProps as E, render as F } from '../../utils/render.js';\nimport { useDescribedBy as R } from '../description/description.js';\nimport { useLabelledBy as U } from '../label/label.js';\nlet x = \"input\";\nfunction h(n, s) {\n  let a = v(),\n    l = _(),\n    i = A(),\n    {\n      id: d = l || `headlessui-input-${a}`,\n      disabled: e = i || !1,\n      autoFocus: o = !1,\n      invalid: t = !1,\n      ...u\n    } = n,\n    f = U(),\n    m = R(),\n    {\n      isFocused: r,\n      focusProps: T\n    } = P({\n      autoFocus: o\n    }),\n    {\n      isHovered: p,\n      hoverProps: b\n    } = c({\n      isDisabled: e\n    }),\n    y = E({\n      ref: s,\n      id: d,\n      \"aria-labelledby\": f,\n      \"aria-describedby\": m,\n      \"aria-invalid\": t ? \"\" : void 0,\n      disabled: e || void 0,\n      autoFocus: o\n    }, T, b),\n    I = g(() => ({\n      disabled: e,\n      invalid: t,\n      hover: p,\n      focus: r,\n      autofocus: o\n    }), [e, t, p, r, o]);\n  return F({\n    ourProps: y,\n    theirProps: u,\n    slot: I,\n    defaultTag: x,\n    name: \"Input\"\n  });\n}\nlet J = D(h);\nexport { J as Input };","map":null,"metadata":{},"sourceType":"module"}