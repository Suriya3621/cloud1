{"ast":null,"code":"import { useMemo as o, useReducer as c } from \"react\";\nimport { useIsoMorphicEffect as h } from './use-iso-morphic-effect.js';\nfunction s(e) {\n  if (e === null) return {\n    width: 0,\n    height: 0\n  };\n  let {\n    width: n,\n    height: t\n  } = e.getBoundingClientRect();\n  return {\n    width: n,\n    height: t\n  };\n}\nfunction f(e, n = !1) {\n  let t = e === null ? null : \"current\" in e ? e.current : e,\n    [l, u] = c(() => ({}), {}),\n    r = o(() => s(t), [t, l]);\n  return h(() => {\n    if (!t) return;\n    let i = new ResizeObserver(u);\n    return i.observe(t), () => {\n      i.disconnect();\n    };\n  }, [t]), n ? {\n    width: `${r.width}px`,\n    height: `${r.height}px`\n  } : r;\n}\nexport { f as useElementSize };","map":null,"metadata":{},"sourceType":"module"}