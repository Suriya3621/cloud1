{"ast":null,"code":"// src/App/userSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: false // This is where user data will be stored\n};\nconst reloadSlice = createSlice({\n  // Corrected name here\n  name: 'reload',\n  initialState,\n  reducers: {\n    setReload: (state, action) => {\n      state.value = action.payload;\n    }\n  }\n});\nexport const {\n  setReload\n} = reloadSlice.actions; // Use destructuring to match the corrected slice name\nexport default reloadSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","reloadSlice","name","reducers","setReload","state","action","payload","actions","reducer"],"sources":["/data/data/com.termux/files/home/cloud1/src/Slice/Reload.js"],"sourcesContent":["// src/App/userSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  value: false, // This is where user data will be stored\n};\n\nconst reloadSlice = createSlice({ // Corrected name here\n  name: 'reload',\n  initialState,\n  reducers: {\n    setReload: (state, action) => {\n      state.value = action.payload;\n    },\n  },\n});\n\nexport const { setReload } = reloadSlice.actions; // Use destructuring to match the corrected slice name\nexport default reloadSlice.reducer;"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,KAAK,CAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAGH,WAAW,CAAC;EAAE;EAChCI,IAAI,EAAE,QAAQ;EACdH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAU,CAAC,GAAGH,WAAW,CAACO,OAAO,CAAC,CAAC;AAClD,eAAeP,WAAW,CAACQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}