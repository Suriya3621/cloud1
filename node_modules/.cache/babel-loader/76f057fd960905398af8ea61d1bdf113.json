{"ast":null,"code":"import { disposables as M } from '../utils/disposables.js';\nimport { getOwnerDocument as b } from '../utils/owner.js';\nimport { useIsTopLayer as L } from './use-is-top-layer.js';\nimport { useIsoMorphicEffect as T } from './use-iso-morphic-effect.js';\nlet f = new Map(),\n  u = new Map();\nfunction h(t) {\n  var e;\n  let r = (e = u.get(t)) != null ? e : 0;\n  return u.set(t, r + 1), r !== 0 ? () => m(t) : (f.set(t, {\n    \"aria-hidden\": t.getAttribute(\"aria-hidden\"),\n    inert: t.inert\n  }), t.setAttribute(\"aria-hidden\", \"true\"), t.inert = !0, () => m(t));\n}\nfunction m(t) {\n  var i;\n  let r = (i = u.get(t)) != null ? i : 1;\n  if (r === 1 ? u.delete(t) : u.set(t, r - 1), r !== 1) return;\n  let e = f.get(t);\n  e && (e[\"aria-hidden\"] === null ? t.removeAttribute(\"aria-hidden\") : t.setAttribute(\"aria-hidden\", e[\"aria-hidden\"]), t.inert = e.inert, f.delete(t));\n}\nfunction y(t, {\n  allowed: r,\n  disallowed: e\n} = {}) {\n  let i = L(t, \"inert-others\");\n  T(() => {\n    var d, c;\n    if (!i) return;\n    let a = M();\n    for (let n of (d = e == null ? void 0 : e()) != null ? d : []) n && a.add(h(n));\n    let s = (c = r == null ? void 0 : r()) != null ? c : [];\n    for (let n of s) {\n      if (!n) continue;\n      let l = b(n);\n      if (!l) continue;\n      let o = n.parentElement;\n      for (; o && o !== l.body;) {\n        for (let p of o.children) s.some(E => p.contains(E)) || a.add(h(p));\n        o = o.parentElement;\n      }\n    }\n    return a.dispose;\n  }, [i, r, e]);\n}\nexport { y as useInertOthers };","map":null,"metadata":{},"sourceType":"module"}