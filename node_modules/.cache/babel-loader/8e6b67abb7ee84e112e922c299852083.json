{"ast":null,"code":"\"use client\";\n\nimport r, { useMemo as F } from \"react\";\nimport { useId as T } from '../../hooks/use-id.js';\nimport { DisabledProvider as f, useDisabled as P } from '../../internal/disabled.js';\nimport { FormFieldsProvider as y } from '../../internal/form-fields.js';\nimport { IdProvider as u } from '../../internal/id.js';\nimport { forwardRefWithAs as D, render as v } from '../../utils/render.js';\nimport { useDescriptions as b } from '../description/description.js';\nimport { useLabels as E } from '../label/label.js';\nlet A = \"div\";\nfunction L(d, l) {\n  let t = `headlessui-control-${T()}`,\n    [s, p] = E(),\n    [n, a] = b(),\n    m = P(),\n    {\n      disabled: e = m || !1,\n      ...o\n    } = d,\n    i = F(() => ({\n      disabled: e\n    }), [e]);\n  return r.createElement(f, {\n    value: e\n  }, r.createElement(p, {\n    value: s\n  }, r.createElement(a, {\n    value: n\n  }, r.createElement(u, {\n    id: t\n  }, v({\n    ourProps: {\n      ref: l,\n      disabled: e || void 0,\n      \"aria-disabled\": e || void 0\n    },\n    theirProps: {\n      ...o,\n      children: r.createElement(y, null, typeof o.children == \"function\" ? o.children(i) : o.children)\n    },\n    slot: i,\n    defaultTag: A,\n    name: \"Field\"\n  })))));\n}\nlet H = D(L);\nexport { H as Field };","map":null,"metadata":{},"sourceType":"module"}